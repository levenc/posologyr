% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pslgyr_dosing_optim.R
\name{poso_dose_conc}
\alias{poso_dose_conc}
\title{Estimate the optimal dose for a selected target concentration}
\usage{
poso_dose_conc(
  object,
  time_c,
  target_conc,
  adapt = FALSE,
  estim_method = "map",
  p = NULL,
  greater_than = TRUE,
  starting_dose = 100,
  interdose_interval = NULL,
  add_dose = NULL,
  duration = NULL,
  indiv_param = NULL
)
}
\arguments{
\item{object}{A posologyr list, created by the \code{\link{posologyr}}
function.}

\item{time_c}{Numeric. Point in time for which the dose is to be
optimized.}

\item{target_conc}{Numeric. Target concentration.}

\item{adapt}{A boolean. If \code{estim_method="map"}, should the estimation
be performed with the adaptive MAP method (as opposed to the
standard MAP)? A column named \code{AMS} is required in the patient record
to define the segments for the adaptive MAP approach.}

\item{estim_method}{A character string. An estimation method to be used for
the individual parameters. The default method "map" is the Maximum A
Posteriori estimation, the method "prior" simulates from the prior
population model, and "sir" uses the Sequential Importance Resampling
algorithm to estimate the a posteriori distribution of the individual
parameters. This argument is ignored if \code{indiv_param} is provided.}

\item{p}{Numeric. The proportion of the distribution of concentrations to
consider for the optimization. Mandatory for \code{estim_method=sir}.}

\item{greater_than}{A boolean. If \code{TRUE}: targets a dose leading to a
proportion \code{p} of the concentrations to be greater than \code{target_conc}.
Respectively, lower if \code{FALSE}.}

\item{starting_dose}{Numeric. Starting dose for the optimization
algorithm.}

\item{interdose_interval}{Numeric. Time for the interdose interval
for multiple dose regimen. Must be provided when add_dose is used.}

\item{add_dose}{Numeric. Additional doses administered at
inter-dose interval after the first dose. Optional.}

\item{duration}{Numeric. Duration of infusion, for zero-order
administrations.}

\item{indiv_param}{Optional. A set of individual parameters : THETA,
estimates of ETA, and covariates.}
}
\value{
A list containing the following components:
\describe{
\item{dose}{Numeric. An optimal dose for the selected target concentration.}
\item{type_of_estimate}{Character string. The type of estimate of the
individual parameters. Either a point estimate, or a distribution.}
\item{conc_estimate}{A vector of numeric estimates of the conc. Either a
single value (for a point estimate of ETA), or a distribution.}
\item{indiv_param}{A \code{data.frame}. The set of individual parameters used
for the determination of the optimal dose : THETA, estimates of ETA, and
covariates}
}
}
\description{
Estimates the optimal dose for a selected target concentration at a
selected point in time given a population pharmacokinetic model, a set
of individual parameters, a selected point in time, and a target
concentration.
}
\examples{
# model
mod_run001 <- list(
ppk_model = RxODE::RxODE({
  centr(0) = 0;
  depot(0) = 0;

  TVCl = THETA_Cl;
  TVVc = THETA_Vc;
  TVKa = THETA_Ka;

  Cl = TVCl*exp(ETA_Cl);
  Vc = TVVc*exp(ETA_Vc);
  Ka = TVKa*exp(ETA_Ka);

  K20 = Cl/Vc;
  Cc = centr/Vc;

  d/dt(depot) = -Ka*depot;
  d/dt(centr) = Ka*depot - K20*centr;
  d/dt(AUC) = Cc;
}),
error_model = function(f,sigma) {
  dv <- cbind(f,1)
  g <- diag(dv\%*\%sigma\%*\%t(dv))
  return(sqrt(g))
},
theta = c(THETA_Cl=4.0, THETA_Vc=70.0, THETA_Ka=1.0),
omega = lotri::lotri({ETA_Cl + ETA_Vc + ETA_Ka ~
    c(0.2,
      0, 0.2,
      0, 0, 0.2)}),
sigma = lotri::lotri({prop + add ~ c(0.05,0.0,0.00)}))
# df_patient01: event table for Patient01, following a 30 minutes intravenous
# infusion
df_patient01 <- data.frame(ID=1,
                        TIME=c(0.0,1.0,14.0),
                        DV=c(NA,25.0,5.5),
                        AMT=c(2000,0,0),
                        EVID=c(1,0,0),
                        DUR=c(0.5,NA,NA))
# loading the model and Patient01's event record
patient01 <- posologyr(prior_model=mod_run001,
                       dat=df_patient01)
# estimate the optimal dose to reach a concentration of 80 mg/l
# one hour after starting the 30-minutes infusion
poso_dose_conc(patient01,time_c=1,duration=0.5,target_conc=80)

}
